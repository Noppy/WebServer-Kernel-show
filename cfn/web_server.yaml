AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a VPC and 4 subnets
#----------------------------------------------
Parameters:
  InstanceType:
    Description: (optional) Instance type
    Type: String
    Default: m5d.xlarge
  AmiId:
    Description: (optional) AMI ID
    Type: String
    Default: ami-0d7ed3ddb85b521a6
  KeyName:
    Description: (required) Name of an existing EC2 key pair
    Type: "AWS::EC2::KeyPair::KeyName"
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: Environment
        Parameters: 
          - InstanceType
          - AmiId
          - KeyName
Resources:
  #--------------------------------------
  # IAM
  #--------------------------------------
  #------------------ VPC FlowLog Role
  FlowlogRole:
    Type: "AWS::IAM::Role"
    Properties: 
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - vpc-flow-logs.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: "Flowlog"
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action: 
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                Resource: "*"
  #--------------------------------------
  # VPC - Network
  #--------------------------------------
  #------------------ VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WebSystem-VPC
  #------------------ Internet GW
  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WebSystem-IGW
  AttachIgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc
      - Igw
  #------------------ Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.11.0/24
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: WebSystem-PublicSubnet-1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.12.0/24
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: yes
      Tags:
        - Key: Name
          Value: WebSystem-PublicSubnet-2
  #------------------ Route Table
  #----------  VPC Public Route Table
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: WebSystem-PubSubRouteTable
  VpcInternetRote:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw
  #---- Attache to subnets in the  VPC
  PublicSubnetRouteTableAssociationPublicSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicSubnetRouteTable
  PublicSubnetRouteTableAssociationPublicSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicSubnetRouteTable
  #------------------ Local Domain Name
  VpcInternalDns:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: "Resource DNS for  VPC"
      Name: local.
      VPCs:
        - VPCId: !Ref Vpc
          VPCRegion: !Ref AWS::Region
  #------------------ Cloudwatch log for Flowlog
  VPCFlowlog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowlogRole.Arn
      LogGroupName: WebSystem/VpcFlowlog
      ResourceId: !Ref Vpc
      ResourceType: VPC
      TrafficType: ALL
  #--------------------------------------
  # Define Security Group
  #--------------------------------------
  WebSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Allow access from HTTP and HTTPS traffic for ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:   80
          ToPort:     80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort:   443
          ToPort:     443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort:   22
          ToPort:     22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key   : Name
          Value : WebSystem-WebSG
    DependsOn:
      - Vpc
  #--------------------------------------
  # Define WebServer
  #--------------------------------------
  WebServerTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub LaunchConfForWebServer-${AWS::StackName}
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        Monitoring:
          Enabled: true
        #SecurityGroupIds:
        #  - !Ref WebSG
        BlockDeviceMappings:
          -
            DeviceName: /dev/xvda
            VirtualName: WebServer_RootVol
            Ebs:
              DeleteOnTermination: true
              VolumeType: gp2
              VolumeSize: 8
              Encrypted: false
          -
            DeviceName: /dev/sdf
            VirtualName: WebServer_DataVol
            Ebs:
              DeleteOnTermination: true
              VolumeType: gp2
              VolumeSize: 20
              Encrypted: false
        NetworkInterfaces:
          -
            DeviceIndex: 0
            SubnetId: !Ref PublicSubnet1
            Groups:
              - !Ref WebSG
            AssociatePublicIpAddress: true
            DeleteOnTermination: true
        UserData:
          Fn::Base64:
            Fn::Join:
              - ""
              - - !Sub |
                  #!/bin/bash -xe
                  yum update -y
                  yum -y install git
                  #Change Hostname
                  hostnamectl set-hostname "WebServer"
                  # Format and mount
                  parted /dev/nvme1n1 mklabel gpt
                  parted /dev/nvme1n1 mkpart primary xfs 0 100%
                  mkfs.xfs -i maxpct=25 /dev/nvme1n1p1
                  xfs_admin -U ce5c319b-77f2-44c6-8fee-aceccf106d93 /dev/nvme1n1p1
                  mkdir /data
                  echo 'UUID=ce5c319b-77f2-44c6-8fee-aceccf106d93     /data       xfs    defaults,noatime  1   1' >> /etc/fstab
                  mount -a
  WebServer1:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebServerTemplate
        Version: !GetAtt WebServerTemplate.LatestVersionNumber
      Tags:
        -
          Key: Nanme
          Value: "WebServer#1"
    DependsOn:
      - WebServerTemplate
  WebServer1Eip:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  ElasticIPAssociate:
    Type: AWS::EC2::EIPAssociation
    Properties: 
      AllocationId: !GetAtt WebServer1Eip.AllocationId
      InstanceId: !Ref WebServer1
Outputs:
  WebServer1PubIP:
    Value: !GetAtt WebServer1.PublicIp